name: Other CI

on:
  push:
    branches: [ master ]
    paths:
      - '.github/workflows/other.yml'
      - 'ci/.hadolint.yaml'
      - 'docker/backend/Dockerfile'
      - 'docker/database/Dockerfile'
      - 'docker/frontend/Dockerfile'
      - 'docker/frontend/css/**'
      - 'docker/frontend/js/**'
      - 'docker/frontend/pages/**'

jobs:
  analyze:
    name: Other Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0

      # Java Analysis
      - name: Set up JDK 22
        uses: actions/setup-java@v4.2.1
        with:
          distribution: 'temurin'
          java-version: '22'

      - name: Cache local .m2
        uses: actions/cache@v4.0.2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up maven
        uses: s4u/setup-maven-action@v1.14.0
        with:
          java-distribution: 'temurin'
          java-version: '22'
          maven-version: '3.9.8'

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.2.0
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Deploy docker containers
        id: docker_deploy
        run: docker compose --file docker-compose-dev.yml up --build --detach

      - name: Run linters and unit/integration tests
        env:
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
          SONARQUBE_PAT: ${{ secrets.SONARQUBE_PAT }}
        run: mvn clean install -Dall

      - name: Shut down docker containers
        run: docker compose --file docker-compose-dev.yml down
        if: steps.docker_deploy.outcome == 'success'

      # Additional CSS Analysis
      - name: Set up Node.js
        uses: actions/setup-node@v4.0.3
        with:
          node-version: '22.4.0'

      - name: Install StyleLint
        run: npm install -g stylelint stylelint-config-standard

      - name: Run StyleLint
        run: stylelint --config ./ci/other/.stylelintrc.json --formatter json --max-warnings 0 --output-file stylelint-report.json "docker/frontend/css/*.css" || true

      - name: Replace Stylelint directory path to match SonarQube mount
        run: |
          sed -i 's|/home/runner/work/folding-stats/folding-stats/docker|/usr/src/docker|g' stylelint-report.json

      # Additional Docker Analysis
      - name: Run Hadolint and generate report
        uses: hadolint/hadolint-action@v3.1.0
        with:
          config: ./ci/other/.hadolint.yaml
          dockerfile: Dockerfile
          output-file: hadolint-report.json
          recursive: true

      # Additional JavaScript Analysis
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3.25.11
        with:
          languages: 'javascript'

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3.25.11

        # SonarQube Analysis (CSS, Docker, HTML, JavaScript)
      - name: Execute SonarQube Scan
        env:
          SONAR_HOST: ${{ vars.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONARQUBE_PAT }}
        run: |
          docker run \
          --rm \
          -e SONAR_HOST_URL=${{ vars.SONAR_HOST_URL }} \
          -v "$(pwd):/usr/src/" \
          sonarsource/sonar-scanner-cli:10.0 \
            -Dsonar.projectKey=folding-stats-other \
            -Dsonar.projectName=folding-stats-other  \
            -Dsonar.sources=. \
            -Dsonar.token=${{ secrets.SONARQUBE_PAT }} \
            -Dsonar.java.checkstyle.reportPaths=**/target/checkstyle-result.xml \
            -Dsonar.java.pmd.reportPaths=**/target/pmd.xml \
            -Dsonar.java.spotbugs.reportPaths=**/target/spotbugsXml.xml \
            -Dsonar.docker.hadolint.reportPaths=hadolint-report.json \
            -Dsonar.css.stylelint.reportPaths=stylelint-report.json

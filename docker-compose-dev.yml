networks:
  development:
    name: development
    driver: bridge

services:

  frontend_dev:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
      args:
        # Docker image versions
        HTTPD_VERSION: "2.4.65"     # https://hub.docker.com/_/httpd/tags
        MINIFY_VERSION: "v2.24.3"   # https://hub.docker.com/r/tdewolff/minify/tags
        NODE_VERSION: "24.8.0"      # https://hub.docker.com/_/node/tags
        # Build arguments
        ADMIN_EMAIL_ADDRESS: "email@test.com"
        FORUM_LINK: "https://extremehw.net/forum/125-extreme-team-folding"
        REST_ENDPOINT_URL: "http://127.0.0.1:8079/folding"
        ROOT_URL: "https://127.0.0.1:81"
        TITLE: "Extreme Team Folding"
        UPDATE_ENABLED: "false"
    container_name: frontend_dev
    hostname: frontend-dev
    depends_on:
      - backend_dev
    networks:
      - development
    ports:
      - "81:443"
    restart: "no"
    volumes_from:
      - backend_dev

  backend_dev:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
      args:
        # Docker image versions
        DEBIAN_VERSION: "12"      # https://console.cloud.google.com/artifacts/docker/distroless/us/gcr.io
        JAVA_VERSION: "25_36"     # https://hub.docker.com/_/eclipse-temurin/tags
        MAVEN_VERSION: "3.9.11"   # https://hub.docker.com/_/maven/tags
        # Build arguments
        KEYSTORE_PASSWORD: "shroot"
    container_name: backend_dev
    hostname: backend-dev # Using a dash as Java's URI builder will fail with an underscore
    environment:
      # External URL configuration
      LARS_URL_ROOT: "http://backend-dev:8443/folding"
      STATS_URL_ROOT: "http://backend-dev:8443/folding"
      REDIRECT_URL: "https://127.0.0.1:81"
      # Spring configuration
      LOG_LEVEL: "INFO"
      DEPLOYMENT_TYPE: "test"
      JVM_MAX: "512m"
      JVM_MIN: "128m"
      MULTIPLE_LOG_FILES: "false"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://database_dev:5432/folding_db"
      SPRING_DATASOURCE_DRIVER: "org.postgresql.Driver"
      SPRING_DATASOURCE_USERNAME: "folding_user"
      SPRING_DATASOURCE_PASSWORD: "shroot"
      SPRING_DATASOURCE_DATABASE_TYPE: "postgresql"
      # Application config
      # NOTE: The monthly reset, result storage and LARS update will always occur at 23:57:00 on the last day of the month
      ENABLE_LARS_HARDWARE_UPDATE: "false"
      ENABLE_MONTHLY_RESULT_STORAGE: "false"
      ENABLE_STATS_MONTHLY_RESET: "false"
      # Stats parsing configuration
      MAXIMUM_HTTP_REQUEST_ATTEMPTS: "3"
      SECONDS_BETWEEN_HTTP_REQUEST_ATTEMPTS: "0"
      STATS_SCHEDULED_PARSING_ENABLED: "false"
      # Category configuration
      USERS_IN_AMD_GPU: "1"
      USERS_IN_NVIDIA_GPU: "1"
      USERS_IN_WILDCARD: "1"
      # Swagger documentation
      CONTACT_NAME: "zodac"
      FORUM_LINK: "https://extremehw.net/forum/125-extreme-team-folding"
      REST_ENDPOINT_URL: "http://127.0.0.1:8079/folding"
    networks:
      - development
    ports:
      - "8079:8443"
    restart: "no"
    volumes:
      - /usr/local/certs/stats/

  database_dev:
    build:
      context: .
      dockerfile: docker/database/Dockerfile
      args:
        # Docker image versions
        POSTGRES_VERSION: "18.0"  # https://hub.docker.com/_/postgres/
        # Build arguments
        ADMIN_USERNAME: "root"
        ADMIN_PASSWORD: "shroot"
        READ_ONLY_USERNAME: "root2"
        READ_ONLY_PASSWORD: "shroot2"
        POSTGRES_USER: "folding_user"
    container_name: database_dev
    hostname: database_dev
    environment:
      # First 4 variables used to configure DB
      POSTGRES_DB: "folding_db"
      POSTGRES_USER: "folding_user"
      POSTGRES_PASSWORD: "shroot"
      POSTGRES_PORT: "5432"
      PGDATA: "/var/lib/postgresql/system/data"
      # Next 3 variables needed to avoid "FATAL role 'root' does not exist" error
      PGDATABASE: "folding_db"
      PGUSER: "folding_user"
      PGPASSWORD: "shroot"
    networks:
      - development
    ports:
      - "5433:5432"
    restart: "no"

  selenium_chrome:
    image: selenium/standalone-chrome:136.0  # https://hub.docker.com/r/selenium/standalone-chrome/tags
    container_name: selenium_chrome
    hostname: selenium_chrome
    depends_on:
      - frontend_dev
    networks:
      - development
    ports:
      - "4444:4444"
    restart: "no"

  selenium_firefox:
    image: selenium/standalone-firefox:141.0  # https://hub.docker.com/r/selenium/standalone-firefox/tags
    container_name: selenium_firefox
    hostname: selenium_firefox
    depends_on:
      - frontend_dev
    networks:
      - development
    ports:
      - "4445:4444"
    restart: "no"

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>me.zodac</groupId>
    <artifactId>folding-stats</artifactId>
    <version>2.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>[${project.artifactId}] project</name>

    <!-- Not defining any modules at the top-level -->
    <!-- Instead, we will define a profile which is activated by default -->
    <!-- This allows us to use another profile with fewer (or no) modules in CI -->
    <!-- However, it does force us to add all modules to any other profile we might define -->
    <modules/>

    <properties>
        <!-- Project Properties -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java-release>21</java-release>
        <maven-release>3.9.4</maven-release>

        <!-- Lint Properties -->
        <!-- All disabled by default, activated through profiles -->
        <skip-linters>true</skip-linters>

        <!-- Test Properties -->
        <!-- All disabled by default, activated through profiles -->
        <skip-integration-tests>true</skip-integration-tests>
        <skip-performance-tests>true</skip-performance-tests>
        <skip-tests>true</skip-tests>
        <skip-ui-tests>true</skip-ui-tests>
        <!-- Adding so Maven plugins will not copy/compile test resources -->
        <maven.test.skip>${skip-tests}</maven.test.skip>
        <!-- JaCoCo Configuration (overridden in each child module) -->
        <line-coverage>0.0</line-coverage>
        <branch-coverage>0.0</branch-coverage>

        <!-- 3PP Versions -->
        <caffeine.version>3.1.8</caffeine.version>
        <gson.version>2.10.1</gson.version>
        <hikariCP.version>5.1.0</hikariCP.version>
        <jakartaee-web-api.version>11.0.0-M1</jakartaee-web-api.version>
        <jersey-server.version>3.1.5</jersey-server.version>
        <jooq.version>3.19.4</jooq.version>
        <jsoup.version>1.17.2</jsoup.version>
        <log4j.version>3.0.0-beta2</log4j.version>
        <lombok.version>1.18.30</lombok.version>
        <micrometer.version>1.12.3</micrometer.version>
        <postgresql.version>42.7.2</postgresql.version>
        <resilience4j.version>2.2.0</resilience4j.version>
        <snakeyaml.version>2.2</snakeyaml.version>
        <spring-boot.version>3.2.2</spring-boot.version>
        <springdoc-openapi.version>2.3.0</springdoc-openapi.version>
        <slf4j-api.version>2.1.0-alpha1</slf4j-api.version>

        <!-- Test 3PP Versions -->
        <assertj-core.version>3.25.3</assertj-core.version>
        <embedded-postgres.version>2.0.6</embedded-postgres.version>
        <embedded-postgres-binaries-bom.version>16.2.0</embedded-postgres-binaries-bom.version>
        <flyway-core.version>10.8.1</flyway-core.version>
        <junit-bom.version>5.10.2</junit-bom.version>
        <selenium-java.version>4.18.1</selenium-java.version>

        <!-- Plugin Versions -->
        <build-helper-maven-plugin.version>3.5.0</build-helper-maven-plugin.version>
        <jacoco-maven-plugin.version>0.8.11</jacoco-maven-plugin.version>
        <jmeter-maven-plugin.version>3.8.0</jmeter-maven-plugin.version>
        <maven-clean-plugin.version>3.3.2</maven-clean-plugin.version>
        <maven-compiler-plugin.version>3.12.1</maven-compiler-plugin.version>
        <maven-dependency-plugin.version>3.6.1</maven-dependency-plugin.version>
        <maven-enforcer-plugin.version>3.4.1</maven-enforcer-plugin.version>
        <maven-failsafe-plugin.version>3.2.5</maven-failsafe-plugin.version>
        <maven-install-plugin.version>3.1.1</maven-install-plugin.version>
        <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
        <maven-project-info-reports-plugin.version>3.5.0</maven-project-info-reports-plugin.version>
        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
        <maven-site-plugin.version>4.0.0-M13</maven-site-plugin.version>
        <maven-surefire-plugin.version>3.2.5</maven-surefire-plugin.version>
        <versions-maven-plugin.version>2.16.2</versions-maven-plugin.version>

        <!-- Linter 3PP Versions -->
        <checkstyle.version>10.13.0</checkstyle.version>
        <error_prone_core.version>2.25.0</error_prone_core.version>
        <licenses.version>1</licenses.version>
        <nullaway.version>0.10.23</nullaway.version>
        <pitest-junit5-plugin.version>1.2.1</pitest-junit5-plugin.version>
        <pmd.version>7.0.0-rc4</pmd.version>
        <spotbugs.version>4.8.3</spotbugs.version>

        <!-- Linter Plugin Versions -->
        <dependency-check-maven.version>9.0.9</dependency-check-maven.version>
        <license-maven-plugin.version>4.3</license-maven-plugin.version>
        <maven-checkstyle-plugin.version>3.3.1</maven-checkstyle-plugin.version>
        <maven-javadoc-plugin.version>3.6.3</maven-javadoc-plugin.version>
        <maven-pmd-plugin.version>3.21.1-pmd-7.0.0-SNAPSHOT</maven-pmd-plugin.version>
        <pitest-maven.version>1.15.8</pitest-maven.version>
        <spotbugs-maven-plugin.version>4.8.3.1</spotbugs-maven-plugin.version>

        <!-- Linter Properties -->
        <!--suppress UnresolvedMavenProperty, files are only used in child modules -->
        <ci-config-directory>${project.parent.basedir}/ci</ci-config-directory>
        <checkstyle-file>${ci-config-directory}/checkstyle.xml</checkstyle-file>
        <dependency-check-suppression-file>${ci-config-directory}/dependency-check-suppression.xml</dependency-check-suppression-file>
        <license-file>${ci-config-directory}/license-template.txt</license-file>
        <license-header-definition-file>${ci-config-directory}/license-header-definition.txt</license-header-definition-file>
        <pitest-test-strength-threshold>100</pitest-test-strength-threshold>
        <pmd-ruleset>${ci-config-directory}/pmd-ruleset.xml</pmd-ruleset>
        <spotbugs-include-file>${ci-config-directory}/spotbugs-include-filter-file.xml</spotbugs-include-file>
        <spotbugs-exclude-file>${ci-config-directory}/spotbugs-exclude-filter-file.xml</spotbugs-exclude-file>

        <!-- ProGuard 3PP Versions -->
        <proguard-base.version>7.4.2</proguard-base.version>
        <proguard-core.version>9.1.1</proguard-core.version>

        <!-- ProGuard Plugin Versions -->
        <proguard-maven-plugin.version>2.6.0</proguard-maven-plugin.version>

        <!-- ProGuard Properties -->
        <!-- Each module must have own ProGuard definition -->
        <proguard-file>${project.basedir}/proguard-rules.cfg</proguard-file>
        <proguard-classifier>optimized</proguard-classifier>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Project Dependencies -->
            <dependency>
                <groupId>me.zodac</groupId>
                <artifactId>folding-stats-api</artifactId>
                <version>${project.version}</version>
                <classifier>${proguard-classifier}</classifier>
            </dependency>
            <dependency>
                <groupId>me.zodac</groupId>
                <artifactId>folding-stats-client-library-java</artifactId>
                <version>${project.version}</version>
                <classifier>${proguard-classifier}</classifier>
            </dependency>
            <dependency>
                <groupId>me.zodac</groupId>
                <artifactId>folding-stats-jar</artifactId>
                <version>${project.version}</version>
                <classifier>${proguard-classifier}</classifier>
            </dependency>

            <!-- 3PP Dependencies -->
            <dependency>
                <groupId>com.github.ben-manes.caffeine</groupId>
                <artifactId>caffeine</artifactId>
                <version>${caffeine.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>${hikariCP.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.platform</groupId>
                <artifactId>jakarta.jakartaee-web-api</artifactId>
                <version>${jakartaee-web-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jooq</groupId>
                <artifactId>jooq</artifactId>
                <version>${jooq.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>${jsoup.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- Provides @NonNull/@Nullable compile-time checks for NullAway -->
            <dependency>
                <groupId>com.uber.nullaway</groupId>
                <artifactId>nullaway</artifactId>
                <version>${nullaway.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
                <exclusions>
                    <!-- Conflicts with version in caffeine, this one is older and less important -->
                    <exclusion>
                        <groupId>org.checkerframework</groupId>
                        <artifactId>checker-qual</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.github.resilience4j</groupId>
                <artifactId>resilience4j-core</artifactId>
                <version>${resilience4j.version}</version>
            </dependency>
            <dependency>
                <groupId>io.github.resilience4j</groupId>
                <artifactId>resilience4j-retry</artifactId>
                <version>${resilience4j.version}</version>
            </dependency>

            <!-- Spring Dependencies -->
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-registry-prometheus</artifactId>
                <version>${micrometer.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring-boot.version}</version>
                <exclusions>
                    <!-- Already being brought in explicitly -->
                    <exclusion>
                        <groupId>io.micrometer</groupId>
                        <artifactId>micrometer-commons</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.micrometer</groupId>
                        <artifactId>micrometer-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.micrometer</groupId>
                        <artifactId>micrometer-observation</artifactId>
                    </exclusion>
                    <!-- Remove built-in logging and use own -->
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${spring-boot.version}</version>
                <exclusions>
                    <!-- Already being brought in explicitly -->
                    <exclusion>
                        <groupId>io.micrometer</groupId>
                        <artifactId>micrometer-commons</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.micrometer</groupId>
                        <artifactId>micrometer-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.micrometer</groupId>
                        <artifactId>micrometer-observation</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-actuator-autoconfigure</artifactId>
                <version>${spring-boot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.core</groupId>
                        <artifactId>jackson-databind</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.datatype</groupId>
                        <artifactId>jackson-datatype-jsr310</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-aop</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
                <version>${spring-boot.version}</version>
                <exclusions>
                    <!-- Already being brought in explicitly -->
                    <exclusion>
                        <groupId>io.micrometer</groupId>
                        <artifactId>micrometer-commons</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.micrometer</groupId>
                        <artifactId>micrometer-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.micrometer</groupId>
                        <artifactId>micrometer-observation</artifactId>
                    </exclusion>
                    <!-- Excluding spring dependencies, since spring-boot-starter-security updates versions slower than others -->
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-json</artifactId>
                    </exclusion>
                    <!-- Already being brought in explicitly -->
                    <exclusion>
                        <groupId>io.micrometer</groupId>
                        <artifactId>micrometer-commons</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.micrometer</groupId>
                        <artifactId>micrometer-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.micrometer</groupId>
                        <artifactId>micrometer-observation</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc-openapi.version}</version>
                <exclusions>
                    <!-- Removing SLF4J, not needed for annotations -->
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-api</artifactId>
                    </exclusion>
                    <!-- Brought in by spring-boot-starter-web -->
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-webmvc</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-autoconfigure</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Test Dependencies -->
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj-core.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.zonky.test</groupId>
                <artifactId>embedded-postgres</artifactId>
                <version>${embedded-postgres.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.zonky.test.postgres</groupId>
                <artifactId>embedded-postgres-binaries-bom</artifactId>
                <version>${embedded-postgres-binaries-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-core</artifactId>
                <version>${flyway-core.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-server</artifactId>
                <version>${jersey-server.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-java</artifactId>
                <version>${selenium-java.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Conflicting Dependencies -->
            <!-- Used by [HikariCP, resilience4j-core, resilience4j-retry], setting to latest available -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j-api.version}</version>
            </dependency>
            <!-- Used by [springdoc-openapi-starter-webmvc-ui:jackson-dataformat-yaml, springdoc-openapi-starter-webmvc-ui:swagger-core-jakarta], setting to latest available -->
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${snakeyaml.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!-- Plugin run at first phase to define properties for use in later phases -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>timestamp-property</id>
                            <goals>
                                <goal>timestamp-property</goal>
                            </goals>
                            <configuration>
                                <name>current-year</name>
                                <!-- Property config -->
                                <locale>en_GB</locale>
                                <pattern>yyyy</pattern>
                                <timeZone>UTC</timeZone>
                                <unit>year</unit>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.lazerycode.jmeter</groupId>
                    <artifactId>jmeter-maven-plugin</artifactId>
                    <version>${jmeter-maven-plugin.version}</version>
                    <!-- Configuration defining test files handled by module -->
                    <executions>
                        <!-- Generate JMeter configuration -->
                        <execution>
                            <id>configuration</id>
                            <goals>
                                <goal>configure</goal>
                            </goals>
                        </execution>

                        <!-- Run JMeter tests -->
                        <execution>
                            <id>jmeter-tests</id>
                            <goals>
                                <goal>jmeter</goal>
                            </goals>
                        </execution>

                        <!-- Fail build on errors in test -->
                        <execution>
                            <id>jmeter-check-results</id>
                            <goals>
                                <goal>results</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven-clean-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <release>${java-release}</release>
                        <showWarnings>false</showWarnings>
                        <annotationProcessorPaths>
                            <!-- Configuration for errorprone compiler checks -->
                            <path>
                                <groupId>com.google.errorprone</groupId>
                                <artifactId>error_prone_core</artifactId>
                                <version>${error_prone_core.version}</version>
                            </path>
                            <!-- Configuration for NullAway compiler checks -->
                            <path>
                                <groupId>com.uber.nullaway</groupId>
                                <artifactId>nullaway</artifactId>
                                <version>${nullaway.version}</version>
                            </path>

                            <!-- The errorprone checks will fail unless Lombok is also added -->
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                        </annotationProcessorPaths>
                        <compilerArgs>
                            <arg>-Xlint:all</arg>
                            <arg>-Xdoclint:all</arg>
                            <!-- Configuration for ErrorProne -->
                            <arg>-XDcompilePolicy=simple</arg>
                            <arg>-Xplugin:ErrorProne -Xep:NullAway:ERROR -XepOpt:NullAway:AnnotatedPackages=${project.groupId}</arg>
                            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>
                            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
                            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
                            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>
                            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>
                            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
                            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
                            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
                            <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
                            <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
                            <!-- Configuration for Spring Boot -->
                            <arg>-parameters</arg>
                        </compilerArgs>
                        <fork>true</fork>
                    </configuration>
                    <inherited>true</inherited>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven-install-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>${maven-project-info-reports-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <configuration>
                        <propertiesEncoding>${project.build.sourceEncoding}</propertiesEncoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven-site-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${versions-maven-plugin.version}</version>
                    <configuration>
                        <!-- List of dependencies to not be updated, due to incompatible versions -->
                        <!-- If a valid update becomes available, it can be updated and removed from below -->
                        <excludes/>
                        <generateBackupPoms>false</generateBackupPoms>
                    </configuration>
                </plugin>

                <!-- Test Execution -->
                <!-- Must be run with tests, cannot be run alone -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                    <configuration>
                        <rules>
                            <rule>
                                <element>BUNDLE</element>
                                <limits>
                                    <limit>
                                        <counter>LINE</counter>
                                        <value>COVEREDRATIO</value>
                                        <minimum>${line-coverage}</minimum>
                                    </limit>
                                    <limit>
                                        <counter>BRANCH</counter>
                                        <value>COVEREDRATIO</value>
                                        <minimum>${branch-coverage}</minimum>
                                    </limit>
                                </limits>
                            </rule>
                        </rules>
                        <skip>${skip-tests}</skip>
                    </configuration>
                    <executions>
                        <execution>
                            <id>default-prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>default-report</id>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>default-check</id>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <failIfNoSpecifiedTests>false</failIfNoSpecifiedTests>
                        <skipTests>${skip-tests}</skipTests>
                        <includes>
                            <include>**/*Test.java</include>
                        </includes>
                    </configuration>
                </plugin>

                <!-- Linters -->

                <!-- Manual execution: -->
                <!-- mvn org.owasp:dependency-check-maven:check -Dlint -->
                <plugin>
                    <groupId>org.owasp</groupId>
                    <artifactId>dependency-check-maven</artifactId>
                    <version>${dependency-check-maven.version}</version>
                    <configuration>
                        <failBuildOnCVSS>0</failBuildOnCVSS>
                        <!--suppress UnresolvedMavenProperty -->
                        <nvdApiServerId>${env.NVD_API_KEY}</nvdApiServerId>
                        <skip>${skip-linters}</skip>
                        <skipProvidedScope>true</skipProvidedScope>
                        <suppressionFiles>
                            <suppressionFile>${dependency-check-suppression-file}</suppressionFile>
                        </suppressionFiles>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- Manual execution: -->
                <!-- mvn license:check -Dlint -->
                <!-- To fix missing/invalid licences, run the following in each module: mvn license:format -Dlint -Dyear="2024" -->
                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>${license-maven-plugin.version}</version>
                    <configuration>
                        <licenseSets>
                            <licenseSet>
                                <excludes>
                                    <exclude>**/gen/**</exclude>
                                </excludes>
                                <header>${license-file}</header>
                                <headerDefinitions>
                                    <headerDefinition>${license-header-definition-file}</headerDefinition>
                                </headerDefinitions>
                                <includes>
                                    <include>src/main/java/**</include>
                                    <include>src/test/java/**</include>
                                </includes>
                            </licenseSet>
                        </licenseSets>
                        <mapping>
                            <java>JavaPackage</java>
                        </mapping>
                        <properties>
                            <initial-year>2021</initial-year>
                            <!--suppress UnresolvedMavenProperty, defined by build-helper-maven-plugin -->
                            <year>${current-year}</year>
                            <website>zodac.me</website>
                        </properties>
                        <skip>${skip-linters}</skip>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>com.mycila</groupId>
                            <artifactId>licenses</artifactId>
                            <version>${licenses.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <phase>process-sources</phase>
                        </execution>
                    </executions>
                </plugin>

                <!-- Manual execution: -->
                <!-- mvn checkstyle:checkstyle -Dlint -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${maven-checkstyle-plugin.version}</version>
                    <configuration>
                        <configLocation>${checkstyle-file}</configLocation>
                        <includeTestSourceDirectory>true</includeTestSourceDirectory>
                        <!--suppress UnresolvedMavenProperty, file is only used in child modules -->
                        <propertyExpansion>checkstyle.config.path=${ci-config-directory}</propertyExpansion>
                        <skip>${skip-linters}</skip>
                        <violationSeverity>info</violationSeverity>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <phase>validate</phase>
                        </execution>
                    </executions>

                    <!-- Overwrite the default version of Checkstyle -->
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>${checkstyle.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <!-- Manual execution: -->
                <!-- mvn enforcer:enforce -Dlint -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
                    <configuration>
                        <rules>
                            <banDynamicVersions>
                                <excludedScopes/>
                                <ignores>
                                    <!-- Format: <ignore>groupId[:artifactId[:version[:type[:scope:[classifier]]]]]</ignore> -->
                                    <!-- Exclude our own JARs optimised by ProGuard -->
                                    <ignore>me.zodac:folding-stats-*:*:jar:*:optimized</ignore>
                                </ignores>
                            </banDynamicVersions>
                            <bannedDependencies>
                                <excludes>
                                    <!-- Ban JUnit4, to not conflict with JUnit5 -->
                                    <exclude>junit:junit</exclude>
                                    <exclude>junit:junit-dep</exclude>
                                </excludes>
                            </bannedDependencies>
                            <dependencyConvergence/>
                            <requireJavaVersion>
                                <version>[${java-release},)</version>
                            </requireJavaVersion>
                            <requireMavenVersion>
                                <version>[${maven-release},4.0)</version>
                            </requireMavenVersion>
                        </rules>
                        <skip>${skip-linters}</skip>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <phase>validate</phase>
                        </execution>
                    </executions>
                </plugin>

                <!-- Manual execution: -->
                <!-- mvn javadoc:javadoc -Dlint -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                    <configuration>
                        <!-- Excluding 'missing' due to 'use of default constructor, which does not provide a comment' false positive -->
                        <doclint>all,-missing</doclint>
                        <excludePackageNames>me.zodac.folding.db.postgres.gen:me.zodac.folding.db.postgres.gen.*</excludePackageNames>
                        <!-- Would prefer this to be true, but annoying false positive with default constructors -->
                        <failOnWarnings>false</failOnWarnings>
                        <quiet>true</quiet>
                        <serialwarn>true</serialwarn>
                        <skip>${skip-linters}</skip>
                        <validateLinks>true</validateLinks>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>javadoc</goal>
                            </goals>
                            <phase>install</phase>
                        </execution>
                    </executions>
                </plugin>

                <!-- Manual execution: -->
                <!-- mvn pmd:check -Dlint -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${maven-pmd-plugin.version}</version>

                    <!-- Overwrite the default version of PMD -->
                    <dependencies>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-core</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-java</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-javascript</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-jsp</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <excludes>
                            <!-- Generated classes -->
                            <exclude>**/gen/*.java</exclude>
                            <exclude>**/gen/**/*.java</exclude>
                        </excludes>
                        <failOnViolation>true</failOnViolation>
                        <includeTests>true</includeTests>
                        <linkXRef>false</linkXRef>
                        <printFailingErrors>true</printFailingErrors>
                        <rulesets>
                            <ruleset>${pmd-ruleset}</ruleset>
                        </rulesets>
                        <skip>${skip-linters}</skip>
                        <targetJdk>${java-release}</targetJdk>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <phase>install</phase>
                        </execution>
                    </executions>
                </plugin>

                <!-- Manual execution: -->
                <!-- mvn org.pitest:pitest-maven:mutationCoverage -->
                <plugin>
                    <groupId>org.pitest</groupId>
                    <artifactId>pitest-maven</artifactId>
                    <version>${pitest-maven.version}</version>
                    <configuration>
                        <excludedClasses>
                            <!-- folding-stats-api: False positives -->
                            <param>*UserStats</param>
                        </excludedClasses>
                        <!-- TODO: Review these once classes are converted to records -->
                        <excludedMethods>
                            <param>equals</param>
                            <param>hashCode</param>
                        </excludedMethods>
                        <excludedTestClasses>
                            <param>*PostgresDbManagerTest</param>
                        </excludedTestClasses>
                        <failWhenNoMutations>false</failWhenNoMutations>
                        <outputFormats>html</outputFormats>
                        <skip>${skip-linters}</skip>
                        <testStrengthThreshold>${pitest-test-strength-threshold}</testStrengthThreshold>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.pitest</groupId>
                            <artifactId>pitest-junit5-plugin</artifactId>
                            <version>${pitest-junit5-plugin.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <goals>
                                <goal>mutationCoverage</goal>
                            </goals>
                            <phase>install</phase>
                        </execution>
                    </executions>
                </plugin>

                <!-- Manual execution: -->
                <!-- mvn spotbugs:spotbugs -Dlint -->
                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>${spotbugs-maven-plugin.version}</version>
                    <configuration>
                        <effort>max</effort>
                        <includeFilterFile>${spotbugs-include-file}</includeFilterFile>
                        <excludeFilterFile>${spotbugs-exclude-file}</excludeFilterFile>
                        <skip>${skip-linters}</skip>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <phase>install</phase>
                        </execution>
                    </executions>
                    <dependencies>
                        <!-- Overwrite the default version of Spotbugs -->
                        <dependency>
                            <groupId>com.github.spotbugs</groupId>
                            <artifactId>spotbugs</artifactId>
                            <version>${spotbugs.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <!-- ProGuard Obfuscation Plugin -->
                <plugin>
                    <groupId>com.github.wvengen</groupId>
                    <artifactId>proguard-maven-plugin</artifactId>
                    <version>${proguard-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>proguard</goal>
                            </goals>
                            <configuration>
                                <attachArtifactClassifier>${proguard-classifier}</attachArtifactClassifier>
                                <includeDependency>true</includeDependency>
                                <attach>true</attach>
                                <options>
                                    <option>-include ${proguard-file}</option>
                                </options>
                                <libs>
                                    <lib>${java.home}/jmods</lib>
                                </libs>
                            </configuration>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>com.guardsquare</groupId>
                            <artifactId>proguard-base</artifactId>
                            <version>${proguard-base.version}</version>
                            <scope>runtime</scope>
                        </dependency>
                        <dependency>
                            <groupId>com.guardsquare</groupId>
                            <artifactId>proguard-core</artifactId>
                            <version>${proguard-core.version}</version>
                            <scope>runtime</scope>
                        </dependency>
                    </dependencies>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!-- Run to create properties for other plugins -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <!-- TODO: Only added to download SNAPSHOT version of PMD plugin, remove when PMD7 is supported on main branch -->
    <pluginRepositories>
        <pluginRepository>
            <id>apache.snapshots</id>
            <name>Apache Snapshot Repository</name>
            <url>https://repository.apache.org/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <profiles>
        <!-- Default profile with all child modules listed -->
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>default</name>
                </property>
            </activation>
            <modules>
                <module>folding-stats-api</module>
                <module>folding-stats-client-library-java</module>
                <module>folding-stats-jar</module>
                <module>folding-stats-rest</module>
                <module>testsuite-integration</module>
                <module>testsuite-performance</module>
                <module>testsuite-ui</module>
            </modules>
        </profile>

        <!-- Profile used to build the parent in docker, without needing to rely on the child modules -->
        <profile>
            <id>docker</id>
            <activation>
                <property>
                    <name>docker</name>
                </property>
            </activation>
            <modules/>
        </profile>

        <!-- Profile to run both tests and linters -->
        <profile>
            <id>activate_all</id>
            <activation>
                <property>
                    <name>all</name>
                </property>
            </activation>
            <modules>
                <module>folding-stats-api</module>
                <module>folding-stats-client-library-java</module>
                <module>folding-stats-jar</module>
                <module>folding-stats-rest</module>
                <module>testsuite-integration</module>
                <module>testsuite-performance</module>
                <module>testsuite-ui</module>
            </modules>
            <properties>
                <skip-performance-tests>false</skip-performance-tests>
                <skip-integration-tests>false</skip-integration-tests>
                <skip-linters>false</skip-linters>
                <skip-tests>false</skip-tests>
                <skip-ui-tests>false</skip-ui-tests>
            </properties>
        </profile>

        <!-- Profile used to execute each module's linters (if any) -->
        <profile>
            <id>activate_linters</id>
            <activation>
                <property>
                    <name>lint</name>
                </property>
            </activation>
            <modules>
                <module>folding-stats-api</module>
                <module>folding-stats-client-library-java</module>
                <module>folding-stats-jar</module>
                <module>folding-stats-rest</module>
                <module>testsuite-integration</module>
                <module>testsuite-ui</module>
            </modules>
            <properties>
                <!-- Needed to build test resources for mutation testing -->
                <maven.test.skip>false</maven.test.skip>
                <skip-linters>false</skip-linters>
            </properties>
        </profile>

        <!-- Profile used to execute each module's testsuite (if any) -->
        <profile>
            <id>activate_tests</id>
            <activation>
                <property>
                    <name>tests</name>
                </property>
            </activation>
            <modules>
                <module>folding-stats-api</module>
                <module>folding-stats-client-library-java</module>
                <module>folding-stats-jar</module>
                <module>folding-stats-rest</module>
                <module>testsuite-integration</module>
                <module>testsuite-performance</module>
                <module>testsuite-ui</module>
            </modules>
            <properties>
                <skip-performance-tests>false</skip-performance-tests>
                <skip-integration-tests>false</skip-integration-tests>
                <skip-tests>false</skip-tests>
                <skip-ui-tests>false</skip-ui-tests>
            </properties>
        </profile>

        <!-- Profile used to execute each module's unit testsuite (if any) -->
        <profile>
            <id>activate_unit_tests</id>
            <activation>
                <property>
                    <name>unit-tests</name>
                </property>
            </activation>
            <modules>
                <module>folding-stats-api</module>
                <module>folding-stats-client-library-java</module>
                <module>folding-stats-jar</module>
                <module>folding-stats-rest</module>
            </modules>
            <properties>
                <skip-tests>false</skip-tests>
            </properties>
        </profile>

        <!-- Profile used to execute each module's integration testsuite (if any) -->
        <profile>
            <id>activate_integration_tests</id>
            <activation>
                <property>
                    <name>integration-tests</name>
                </property>
            </activation>
            <modules>
                <module>testsuite-integration</module>
            </modules>
            <properties>
                <skip-integration-tests>false</skip-integration-tests>
            </properties>
        </profile>

        <!-- Profile used to execute each module's performance testsuite (if any) -->
        <profile>
            <id>activate_performance_tests</id>
            <activation>
                <property>
                    <name>performance-tests</name>
                </property>
            </activation>
            <modules>
                <module>testsuite-performance</module>
            </modules>
            <properties>
                <skip-performance-tests>false</skip-performance-tests>
            </properties>
        </profile>

        <!-- Profile used to execute each module's UI testsuite (if any) -->
        <profile>
            <id>activate_ui_tests</id>
            <activation>
                <property>
                    <name>ui-tests</name>
                </property>
            </activation>
            <modules>
                <module>testsuite-ui</module>
            </modules>
            <properties>
                <skip-ui-tests>false</skip-ui-tests>
            </properties>
        </profile>
    </profiles>
</project>

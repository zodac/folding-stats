/*
 * This file is generated by jOOQ.
 */
package net.zodac.folding.db.postgres.gen.tables.records;


import java.time.LocalDateTime;

import net.zodac.folding.db.postgres.gen.tables.UserOffsetTcStats;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UserOffsetTcStatsRecord extends UpdatableRecordImpl<UserOffsetTcStatsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user_offset_tc_stats.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.user_offset_tc_stats.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.user_offset_tc_stats.utc_timestamp</code>.
     */
    public void setUtcTimestamp(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.user_offset_tc_stats.utc_timestamp</code>.
     */
    public LocalDateTime getUtcTimestamp() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.user_offset_tc_stats.offset_points</code>.
     */
    public void setOffsetPoints(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.user_offset_tc_stats.offset_points</code>.
     */
    public Long getOffsetPoints() {
        return (Long) get(2);
    }

    /**
     * Setter for
     * <code>public.user_offset_tc_stats.offset_multiplied_points</code>.
     */
    public void setOffsetMultipliedPoints(Long value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>public.user_offset_tc_stats.offset_multiplied_points</code>.
     */
    public Long getOffsetMultipliedPoints() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.user_offset_tc_stats.offset_units</code>.
     */
    public void setOffsetUnits(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.user_offset_tc_stats.offset_units</code>.
     */
    public Integer getOffsetUnits() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, LocalDateTime> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserOffsetTcStatsRecord
     */
    public UserOffsetTcStatsRecord() {
        super(UserOffsetTcStats.USER_OFFSET_TC_STATS);
    }

    /**
     * Create a detached, initialised UserOffsetTcStatsRecord
     */
    public UserOffsetTcStatsRecord(Integer userId, LocalDateTime utcTimestamp, Long offsetPoints, Long offsetMultipliedPoints, Integer offsetUnits) {
        super(UserOffsetTcStats.USER_OFFSET_TC_STATS);

        setUserId(userId);
        setUtcTimestamp(utcTimestamp);
        setOffsetPoints(offsetPoints);
        setOffsetMultipliedPoints(offsetMultipliedPoints);
        setOffsetUnits(offsetUnits);
        resetTouchedOnNotNull();
    }
}

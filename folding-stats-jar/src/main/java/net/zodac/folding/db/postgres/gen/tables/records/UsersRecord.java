/*
 * This file is generated by jOOQ.
 */
package net.zodac.folding.db.postgres.gen.tables.records;


import net.zodac.folding.db.postgres.gen.tables.Users;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.users.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.users.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.users.folding_username</code>.
     */
    public void setFoldingUsername(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.users.folding_username</code>.
     */
    public String getFoldingUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.users.display_username</code>.
     */
    public void setDisplayUsername(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.users.display_username</code>.
     */
    public String getDisplayUsername() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.users.passkey</code>.
     */
    public void setPasskey(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.users.passkey</code>.
     */
    public String getPasskey() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.users.category</code>.
     */
    public void setCategory(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.users.category</code>.
     */
    public String getCategory() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.users.profile_link</code>.
     */
    public void setProfileLink(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.users.profile_link</code>.
     */
    public String getProfileLink() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.users.live_stats_link</code>.
     */
    public void setLiveStatsLink(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.users.live_stats_link</code>.
     */
    public String getLiveStatsLink() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.users.hardware_id</code>.
     */
    public void setHardwareId(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.users.hardware_id</code>.
     */
    public Integer getHardwareId() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>public.users.team_id</code>.
     */
    public void setTeamId(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.users.team_id</code>.
     */
    public Integer getTeamId() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>public.users.is_captain</code>.
     */
    public void setIsCaptain(Boolean value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.users.is_captain</code>.
     */
    public Boolean getIsCaptain() {
        return (Boolean) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(Integer userId, String foldingUsername, String displayUsername, String passkey, String category, String profileLink, String liveStatsLink, Integer hardwareId, Integer teamId, Boolean isCaptain) {
        super(Users.USERS);

        setUserId(userId);
        setFoldingUsername(foldingUsername);
        setDisplayUsername(displayUsername);
        setPasskey(passkey);
        setCategory(category);
        setProfileLink(profileLink);
        setLiveStatsLink(liveStatsLink);
        setHardwareId(hardwareId);
        setTeamId(teamId);
        setIsCaptain(isCaptain);
        resetChangedOnNotNull();
    }
}

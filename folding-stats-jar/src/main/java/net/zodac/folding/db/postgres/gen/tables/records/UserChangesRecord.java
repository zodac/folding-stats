/*
 * This file is generated by jOOQ.
 */
package net.zodac.folding.db.postgres.gen.tables.records;


import java.time.LocalDateTime;

import net.zodac.folding.db.postgres.gen.tables.UserChanges;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UserChangesRecord extends UpdatableRecordImpl<UserChangesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user_changes.user_change_id</code>.
     */
    public void setUserChangeId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.user_changes.user_change_id</code>.
     */
    public Integer getUserChangeId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.user_changes.created_utc_timestamp</code>.
     */
    public void setCreatedUtcTimestamp(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.user_changes.created_utc_timestamp</code>.
     */
    public LocalDateTime getCreatedUtcTimestamp() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.user_changes.updated_utc_timestamp</code>.
     */
    public void setUpdatedUtcTimestamp(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.user_changes.updated_utc_timestamp</code>.
     */
    public LocalDateTime getUpdatedUtcTimestamp() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.user_changes.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.user_changes.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.user_changes.previous_user</code>.
     */
    public void setPreviousUser(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.user_changes.previous_user</code>.
     */
    public String getPreviousUser() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.user_changes.new_user</code>.
     */
    public void setNewUser(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.user_changes.new_user</code>.
     */
    public String getNewUser() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.user_changes.state</code>.
     */
    public void setState(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.user_changes.state</code>.
     */
    public String getState() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserChangesRecord
     */
    public UserChangesRecord() {
        super(UserChanges.USER_CHANGES);
    }

    /**
     * Create a detached, initialised UserChangesRecord
     */
    public UserChangesRecord(Integer userChangeId, LocalDateTime createdUtcTimestamp, LocalDateTime updatedUtcTimestamp, Integer userId, String previousUser, String newUser, String state) {
        super(UserChanges.USER_CHANGES);

        setUserChangeId(userChangeId);
        setCreatedUtcTimestamp(createdUtcTimestamp);
        setUpdatedUtcTimestamp(updatedUtcTimestamp);
        setUserId(userId);
        setPreviousUser(previousUser);
        setNewUser(newUser);
        setState(state);
        resetChangedOnNotNull();
    }
}

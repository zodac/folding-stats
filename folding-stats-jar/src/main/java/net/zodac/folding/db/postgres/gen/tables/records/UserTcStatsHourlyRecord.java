/*
 * This file is generated by jOOQ.
 */
package net.zodac.folding.db.postgres.gen.tables.records;


import java.time.LocalDateTime;

import net.zodac.folding.db.postgres.gen.tables.UserTcStatsHourly;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UserTcStatsHourlyRecord extends UpdatableRecordImpl<UserTcStatsHourlyRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user_tc_stats_hourly.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.user_tc_stats_hourly.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.user_tc_stats_hourly.utc_timestamp</code>.
     */
    public void setUtcTimestamp(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.user_tc_stats_hourly.utc_timestamp</code>.
     */
    public LocalDateTime getUtcTimestamp() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.user_tc_stats_hourly.tc_points</code>.
     */
    public void setTcPoints(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.user_tc_stats_hourly.tc_points</code>.
     */
    public Long getTcPoints() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.user_tc_stats_hourly.tc_points_multiplied</code>.
     */
    public void setTcPointsMultiplied(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.user_tc_stats_hourly.tc_points_multiplied</code>.
     */
    public Long getTcPointsMultiplied() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.user_tc_stats_hourly.tc_units</code>.
     */
    public void setTcUnits(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.user_tc_stats_hourly.tc_units</code>.
     */
    public Integer getTcUnits() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, LocalDateTime> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserTcStatsHourlyRecord
     */
    public UserTcStatsHourlyRecord() {
        super(UserTcStatsHourly.USER_TC_STATS_HOURLY);
    }

    /**
     * Create a detached, initialised UserTcStatsHourlyRecord
     */
    public UserTcStatsHourlyRecord(Integer userId, LocalDateTime utcTimestamp, Long tcPoints, Long tcPointsMultiplied, Integer tcUnits) {
        super(UserTcStatsHourly.USER_TC_STATS_HOURLY);

        setUserId(userId);
        setUtcTimestamp(utcTimestamp);
        setTcPoints(tcPoints);
        setTcPointsMultiplied(tcPointsMultiplied);
        setTcUnits(tcUnits);
        resetChangedOnNotNull();
    }
}

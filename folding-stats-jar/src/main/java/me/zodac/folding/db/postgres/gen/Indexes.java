/*
 * This file is generated by jOOQ.
 */
package me.zodac.folding.db.postgres.gen;


import me.zodac.folding.db.postgres.gen.tables.Hardware;
import me.zodac.folding.db.postgres.gen.tables.MonthlyResults;
import me.zodac.folding.db.postgres.gen.tables.RetiredUserStats;
import me.zodac.folding.db.postgres.gen.tables.Teams;
import me.zodac.folding.db.postgres.gen.tables.UserChanges;
import me.zodac.folding.db.postgres.gen.tables.UserInitialStats;
import me.zodac.folding.db.postgres.gen.tables.UserOffsetTcStats;
import me.zodac.folding.db.postgres.gen.tables.UserTcStatsHourly;
import me.zodac.folding.db.postgres.gen.tables.UserTotalStats;
import me.zodac.folding.db.postgres.gen.tables.Users;

import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling indexes of tables in public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index INDEX_HARDWARE_ID = Internal.createIndex(DSL.name("index_hardware_id"), Hardware.HARDWARE, new OrderField[] { Hardware.HARDWARE.HARDWARE_ID }, false);
    public static final Index INDEX_MONTHLY_RESULTS = Internal.createIndex(DSL.name("index_monthly_results"), MonthlyResults.MONTHLY_RESULTS, new OrderField[] { MonthlyResults.MONTHLY_RESULTS.UTC_TIMESTAMP }, false);
    public static final Index INDEX_RETIRED_USER_STATS = Internal.createIndex(DSL.name("index_retired_user_stats"), RetiredUserStats.RETIRED_USER_STATS, new OrderField[] { RetiredUserStats.RETIRED_USER_STATS.RETIRED_USER_ID, RetiredUserStats.RETIRED_USER_STATS.UTC_TIMESTAMP }, false);
    public static final Index INDEX_TEAM_ID = Internal.createIndex(DSL.name("index_team_id"), Teams.TEAMS, new OrderField[] { Teams.TEAMS.TEAM_ID }, false);
    public static final Index INDEX_USER_CHANGES_ID = Internal.createIndex(DSL.name("index_user_changes_id"), UserChanges.USER_CHANGES, new OrderField[] { UserChanges.USER_CHANGES.USER_CHANGE_ID }, false);
    public static final Index INDEX_USER_CHANGES_STATE = Internal.createIndex(DSL.name("index_user_changes_state"), UserChanges.USER_CHANGES, new OrderField[] { UserChanges.USER_CHANGES.STATE }, false);
    public static final Index INDEX_USER_ID = Internal.createIndex(DSL.name("index_user_id"), Users.USERS, new OrderField[] { Users.USERS.USER_ID }, false);
    public static final Index INDEX_USER_INITIAL_STATS = Internal.createIndex(DSL.name("index_user_initial_stats"), UserInitialStats.USER_INITIAL_STATS, new OrderField[] { UserInitialStats.USER_INITIAL_STATS.USER_ID, UserInitialStats.USER_INITIAL_STATS.UTC_TIMESTAMP }, false);
    public static final Index INDEX_USER_OFFSET_TC_STATS = Internal.createIndex(DSL.name("index_user_offset_tc_stats"), UserOffsetTcStats.USER_OFFSET_TC_STATS, new OrderField[] { UserOffsetTcStats.USER_OFFSET_TC_STATS.USER_ID, UserOffsetTcStats.USER_OFFSET_TC_STATS.UTC_TIMESTAMP }, false);
    public static final Index INDEX_USER_TC_STATS_HOURLY = Internal.createIndex(DSL.name("index_user_tc_stats_hourly"), UserTcStatsHourly.USER_TC_STATS_HOURLY, new OrderField[] { UserTcStatsHourly.USER_TC_STATS_HOURLY.USER_ID, UserTcStatsHourly.USER_TC_STATS_HOURLY.UTC_TIMESTAMP }, false);
    public static final Index INDEX_USER_TOTAL_STATS = Internal.createIndex(DSL.name("index_user_total_stats"), UserTotalStats.USER_TOTAL_STATS, new OrderField[] { UserTotalStats.USER_TOTAL_STATS.USER_ID, UserTotalStats.USER_TOTAL_STATS.UTC_TIMESTAMP }, false);
}

/*
 * This file is generated by jOOQ.
 */
package me.zodac.folding.db.postgres.gen.tables.records;


import java.time.LocalDateTime;

import me.zodac.folding.db.postgres.gen.tables.UserTcStatsHourly;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserTcStatsHourlyRecord extends UpdatableRecordImpl<UserTcStatsHourlyRecord> implements Record5<Integer, LocalDateTime, Long, Long, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user_tc_stats_hourly.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.user_tc_stats_hourly.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.user_tc_stats_hourly.utc_timestamp</code>.
     */
    public void setUtcTimestamp(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.user_tc_stats_hourly.utc_timestamp</code>.
     */
    public LocalDateTime getUtcTimestamp() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.user_tc_stats_hourly.tc_points</code>.
     */
    public void setTcPoints(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.user_tc_stats_hourly.tc_points</code>.
     */
    public Long getTcPoints() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.user_tc_stats_hourly.tc_points_multiplied</code>.
     */
    public void setTcPointsMultiplied(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.user_tc_stats_hourly.tc_points_multiplied</code>.
     */
    public Long getTcPointsMultiplied() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.user_tc_stats_hourly.tc_units</code>.
     */
    public void setTcUnits(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.user_tc_stats_hourly.tc_units</code>.
     */
    public Integer getTcUnits() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, LocalDateTime> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, LocalDateTime, Long, Long, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, LocalDateTime, Long, Long, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return UserTcStatsHourly.USER_TC_STATS_HOURLY.USER_ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return UserTcStatsHourly.USER_TC_STATS_HOURLY.UTC_TIMESTAMP;
    }

    @Override
    public Field<Long> field3() {
        return UserTcStatsHourly.USER_TC_STATS_HOURLY.TC_POINTS;
    }

    @Override
    public Field<Long> field4() {
        return UserTcStatsHourly.USER_TC_STATS_HOURLY.TC_POINTS_MULTIPLIED;
    }

    @Override
    public Field<Integer> field5() {
        return UserTcStatsHourly.USER_TC_STATS_HOURLY.TC_UNITS;
    }

    @Override
    public Integer component1() {
        return getUserId();
    }

    @Override
    public LocalDateTime component2() {
        return getUtcTimestamp();
    }

    @Override
    public Long component3() {
        return getTcPoints();
    }

    @Override
    public Long component4() {
        return getTcPointsMultiplied();
    }

    @Override
    public Integer component5() {
        return getTcUnits();
    }

    @Override
    public Integer value1() {
        return getUserId();
    }

    @Override
    public LocalDateTime value2() {
        return getUtcTimestamp();
    }

    @Override
    public Long value3() {
        return getTcPoints();
    }

    @Override
    public Long value4() {
        return getTcPointsMultiplied();
    }

    @Override
    public Integer value5() {
        return getTcUnits();
    }

    @Override
    public UserTcStatsHourlyRecord value1(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserTcStatsHourlyRecord value2(LocalDateTime value) {
        setUtcTimestamp(value);
        return this;
    }

    @Override
    public UserTcStatsHourlyRecord value3(Long value) {
        setTcPoints(value);
        return this;
    }

    @Override
    public UserTcStatsHourlyRecord value4(Long value) {
        setTcPointsMultiplied(value);
        return this;
    }

    @Override
    public UserTcStatsHourlyRecord value5(Integer value) {
        setTcUnits(value);
        return this;
    }

    @Override
    public UserTcStatsHourlyRecord values(Integer value1, LocalDateTime value2, Long value3, Long value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserTcStatsHourlyRecord
     */
    public UserTcStatsHourlyRecord() {
        super(UserTcStatsHourly.USER_TC_STATS_HOURLY);
    }

    /**
     * Create a detached, initialised UserTcStatsHourlyRecord
     */
    public UserTcStatsHourlyRecord(Integer userId, LocalDateTime utcTimestamp, Long tcPoints, Long tcPointsMultiplied, Integer tcUnits) {
        super(UserTcStatsHourly.USER_TC_STATS_HOURLY);

        setUserId(userId);
        setUtcTimestamp(utcTimestamp);
        setTcPoints(tcPoints);
        setTcPointsMultiplied(tcPointsMultiplied);
        setTcUnits(tcUnits);
    }
}
